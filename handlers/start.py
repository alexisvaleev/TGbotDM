# handlers/start.py

from aiogram import types, Dispatcher
from aiogram.dispatcher import FSMContext
from sqlalchemy.future import select
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton

from database import AsyncSessionLocal
from models import User
from handlers.common import BACK_BTN


async def cmd_start(message: types.Message, state: FSMContext):
    """
    /start ‚Äî –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–æ–≤—ã–π, —Å–æ–∑–¥–∞—ë–º —Å —Ä–æ–ª—å—é student
    –∏ –ø–µ—Ä–µ–≤–æ–¥–∏–º –µ–≥–æ –≤ FSM –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è, –∏–Ω–∞—á–µ ‚Äî –ø–æ–∫–∞–∑—ã–≤–∞–µ–º
    –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –ø–æ–¥ —É–∂–µ –∏–∑–≤–µ—Å—Ç–Ω—É—é —Ä–æ–ª—å.
    """
    await state.finish()
    tg_id = message.from_user.id

    async with AsyncSessionLocal() as session:
        res = await session.execute(select(User).where(User.tg_id == tg_id))
        me = res.scalar_one_or_none()

        if not me:
            # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–æ–≤–æ–≥–æ —Å—Ç—É–¥–µ–Ω—Ç–∞
            me = User(
                tg_id=tg_id,
                role="student",
                group_id=None,
                surname=None,
                name=None,
                patronymic=None
            )
            session.add(me)
            await session.commit()
            await session.refresh(me)

            # –õ–æ–∫–∞–ª—å–Ω—ã–π –∏–º–ø–æ—Ä—Ç, —á—Ç–æ–±—ã –Ω–µ —Å–æ–∑–¥–∞–≤–∞—Ç—å —Ü–∏–∫–ª–∏—á–µ—Å–∫–∏—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
            from handlers.profile import ask_profile
            return await ask_profile(message, state)

    # –£–∂–µ –µ—Å—Ç—å –≤ –ë–î ‚Äî —Å—Ç—Ä–æ–∏–º –º–µ–Ω—é
    return await _send_main_menu(message, me.role)


async def _send_main_menu(message: types.Message, role: str):
    """
    –í—ã–≤–æ–¥–∏—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–æ–ª–∏.
    –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤–Ω—É—Ç—Ä–∏ cmd_start –∏ –≤ return_to_main_menu.
    """
    kb = ReplyKeyboardMarkup(resize_keyboard=True)
    if role == "admin":
        kb.add(KeyboardButton("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"))
        kb.add(KeyboardButton("‚ûï –°–æ–∑–¥–∞—Ç—å –æ–ø—Ä–æ—Å"), KeyboardButton("üóë –£–¥–∞–ª–∏—Ç—å –æ–ø—Ä–æ—Å"))
        kb.add(KeyboardButton("‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –æ–ø—Ä–æ—Å"), KeyboardButton("üì• –≠–∫—Å–ø–æ—Ä—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤"))
        kb.add(KeyboardButton("üë• –ü—Ä–æ—Å–º–æ—Ç—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"), KeyboardButton("‚ûï –î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"))
        kb.add(KeyboardButton("‚ûï –°–æ–∑–¥–∞—Ç—å –≥—Ä—É–ø–ø—É"), KeyboardButton("üîÄ –ù–∞–∑–Ω–∞—á–∏—Ç—å –≥—Ä—É–ø–ø—É"))

    elif role == "teacher":
        kb.add(KeyboardButton("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"))
        kb.add(KeyboardButton("‚ûï –°–æ–∑–¥–∞—Ç—å –æ–ø—Ä–æ—Å"), KeyboardButton("üóë –£–¥–∞–ª–∏—Ç—å –æ–ø—Ä–æ—Å"))
        kb.add(KeyboardButton("‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –æ–ø—Ä–æ—Å"), KeyboardButton("üì• –≠–∫—Å–ø–æ—Ä—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤"))
        kb.add(KeyboardButton("üë• –ü—Ä–æ—Å–º–æ—Ç—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"), KeyboardButton("‚ûï –î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"))
        kb.add(KeyboardButton("‚ûï –°–æ–∑–¥–∞—Ç—å –≥—Ä—É–ø–ø—É"), KeyboardButton("üîÄ –ù–∞–∑–Ω–∞—á–∏—Ç—å –≥—Ä—É–ø–ø—É"))
        kb.add(KeyboardButton("üìã –ü—Ä–æ–π—Ç–∏ –æ–ø—Ä–æ—Å"))

    elif role == "student":
        kb.add(KeyboardButton("üìã –ü—Ä–æ–π—Ç–∏ –æ–ø—Ä–æ—Å"))

    else:
        return await message.answer("‚õî –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤.", reply_markup=BACK_BTN)

    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=kb)


def register_start_handlers(dp: Dispatcher):
    dp.register_message_handler(cmd_start, commands=["start"], state="*")
